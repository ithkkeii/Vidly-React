{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/pagination.jsx","components/common/input.jsx","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/navbar.jsx","components/customers.jsx","components/rentals.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/movieForm.jsx","components/not-found.jsx","components/common/logout.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","err","console","Axios","defaults","baseURL","process","interceptors","response","use","error","status","toast","logger","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getMovie","movieId","http","apiEndpoint","deleteMovie","saveMovie","movie","_id","body","getGenres","ListGroup","items","onItemSelect","selectedItem","valueProperty","textProperty","Fragment","className","map","item","onClick","key","defaultProps","Like","props","classes","Liked","aria-hidden","style","cursor","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","this","c","label","Component","TableBody","renderCell","content","_","createKey","data","Table","onLike","onDelete","tokenKey","login","email","password","a","localStorage","setItem","getCurrentUser","getItem","jwtDecode","MoviesTable","to","title","liked","deleteColumn","user","authService","isAdmin","push","movies","Pagination","pageSize","itemsCount","onPageChange","currentPage","onPageIncrement","pagesCount","Math","ceil","pages","range","aria-label","href","page","Input","name","type","value","onChange","htmlFor","id","SearchBox","raiseSearch","input","currentTarget","Movies","state","genres","selectedGenre","searchQuery","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handlePageIncrement","handleGenreSelect","genre","handleSort","handleSearch","query","getPageData","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","marginBottom","NavBar","data-toggle","data-target","aria-controls","aria-expanded","Customers","Rentals","Select","options","option","Form","validate","Joi","schema","abortEarly","errors","details","message","validateProperty","obj","handleSubmit","e","preventDefault","doSubmit","handleChange","errorMessage","renderButton","disabled","renderInput","renderSelect","LoginForm","username","string","min","required","window","location","from","pathname","onSubmit","register","RegisterForm","userService","MovieForm","genreId","numberInStock","dailyRentalRate","number","positive","max","mapToViewModel","match","params","history","replace","populateGenres","populateMovie","NotFound","Logout","removeItem","ProtectedRoute","component","render","rest","App","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4b897762.chunk.js","sourcesContent":["import * as Sentry from \"@sentry/browser\";\r\n\r\nfunction init() {\r\n  //   Sentry.init({\r\n  //     dsn: \"https://e1d319f342ba4d118227599e244e84dd@sentry.io/1783637\"\r\n  //   });\r\n}\r\n\r\nfunction log(err) {\r\n  //   Sentry.captureException(err);\r\n  console.log(err);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\nAxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nAxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    toast.error(\"Something wrong happened!!\");\r\n    console.log(\"Logging the error: \" + error);\r\n    logger.log(error);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  Axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: Axios.get,\r\n  post: Axios.post,\r\n  put: Axios.put,\r\n  delete: Axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\nexport const getMovies = () => {\r\n  return http.get(apiEndpoint);\r\n};\r\n\r\nexport const getMovie = movieId => {\r\n  return http.get(apiEndpoint + \"/\" + movieId);\r\n};\r\n\r\nexport const deleteMovie = movieId => {\r\n  return http.delete(`/${movieId}`);\r\n};\r\n\r\nexport const saveMovie = movie => {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(apiEndpoint + \"/\" + movie._id, body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n};\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(`/genres`);\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  onItemSelect,\r\n  selectedItem,\r\n  valueProperty,\r\n  textProperty\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <ul className=\"list-group\">\r\n        {items.map(item => (\r\n          <li\r\n            onClick={() => {\r\n              onItemSelect(item);\r\n            }}\r\n            key={item[valueProperty]}\r\n            className={\r\n              item === selectedItem || (!item._id && !selectedItem)\r\n                ? \"list-group-item active\"\r\n                : \"list-group-item\"\r\n            }\r\n          >\r\n            {item[textProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.Liked === true) classes += \"-o\";\n  return (\n    <i\n      className={classes}\n      aria-hidden=\"true\"\n      style={{ cursor: \"pointer\" }}\n      onClick={props.onClick}\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <li className=\"fa fa-sort-asc\"></li>;\r\n    return <li className=\"fa fa-sort-desc\"></li>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map(c => (\r\n            <th key={c.path || c.key} onClick={() => this.raiseSort(c.path)}>\r\n              {c.label} {this.renderSortIcon(c)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, data, sortColumn, onSort, onLike, onDelete }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody\r\n        data={data}\r\n        columns={columns}\r\n        onLike={onLike}\r\n        onDelete={onDelete}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport * as authService from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      path: \"\",\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like Liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    path: \"\",\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = authService.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, sortColumn, onLike, onDelete, onSort } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onLike={onLike}\r\n        onDelete={onDelete}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({\r\n  pageSize,\r\n  itemsCount,\r\n  currentPage,\r\n  onPageChange,\r\n  onPageIncrement\r\n}) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  // No pagination\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n  //   if (currentPage === pages[pages.length - 1])\r\n  return (\r\n    <React.Fragment>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"#\">\r\n              Previous\r\n            </a>\r\n          </li>\r\n          {pages.map(page => (\r\n            <li\r\n              key={page}\r\n              className=\"page-item\"\r\n              onClick={() => {\r\n                onPageChange(page);\r\n              }}\r\n            >\r\n              <a className=\"page-link\" href=\"#\">\r\n                {page}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li className=\"page-item\" onClick={onPageIncrement}>\r\n            <a className=\"page-link\" href=\"#\">\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pageSize: PropTypes.number.isRequired,\r\n  itemsCount: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  onPageIncrement: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, type, value, error, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        className=\"form-control\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./common/input\";\r\n\r\nclass SearchBox extends Component {\r\n  raiseSearch = ({ currentTarget: input }) => {\r\n    this.props.onChange(input.value);\r\n  };\r\n\r\n  render() {\r\n    return <Input value={this.props.value} onChange={this.raiseSearch} />;\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\"\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id + 1000);\n    } catch (error) {\n      if (error.response && error.response.status === 400)\n        toast.error(\"This movie is already deleted\");\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handlePageIncrement = () => {\n    const page = this.state.currentPage + 1;\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n  };\n\n  handleSort = sortColumn => {\n    // const sortColumn = { ...this.state.sortColumn };\n    // if (sortColumn.path === path)\n    //   sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    // else {\n    //   sortColumn.path = path;\n    //   sortColumn.order = \"asc\";\n    // }\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = query => {\n    this.setState({\n      currentPage: 1,\n      selectedGenre: null,\n      searchQuery: query\n    });\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n      searchQuery\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id) {\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n    }\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      searchQuery\n    } = this.state;\n\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <ListGroup\n              items={this.state.genres}\n              selectedItem={selectedGenre}\n              onItemSelect={this.handleGenreSelect}\n            />\n          </div>\n          <div className=\"col-10\">\n            {this.props.user && (\n              <Link\n                to=\"/movies/new\"\n                className=\"btn btn-primary\"\n                style={{ marginBottom: 20 }}\n              >\n                New Movie\n              </Link>\n            )}\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\n            <p>Showing {totalCount} movies in the database.</p>\n            <MoviesTable\n              movies={movies}\n              sortColumn={sortColumn}\n              onLike={this.handleLike}\n              onDelete={this.handleDelete}\n              onSort={this.handleSort}\n            />\n            <Pagination\n              itemsCount={totalCount}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={this.handlePageChange}\n              onPageIncrement={this.handlePageIncrement}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  //items === array of items\r\n  //pageNumber === number of current page\r\n  //pageSize === number of items in 1 page\r\n\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <NavLink className=\"nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customer</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, value, error, options, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        className=\"custom-select\"\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        <option value=\"\">---Choose---</option>\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import Joi from \"joi-browser\";\r\nimport React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  //state = { data: {}, error: {} };\r\n\r\n  validate = () => {\r\n    const { error } = Joi.validate(this.state.data, this.schema, {\r\n      abortEarly: false\r\n    });\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (const item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        disabled={this.validate()}\r\n        onClick={this.handleSubmit}\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, genres) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        error={errors[name]}\r\n        options={genres}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as authService from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  //Joi-browser schema\r\n  schema = {\r\n    username: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    //Call the server\r\n    const { data } = this.state;\r\n    try {\r\n      await authService.login(data.username, data.password);\r\n      window.location = this.props.location.state\r\n        ? this.props.location.state.from.pathname\r\n        : \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (authService.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport const register = async user => {\r\n  const response = await http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n  localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\r\n};\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport * as authService from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = { data: { username: \"\", password: \"\", name: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .min(5)\r\n      .email()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .min(2)\r\n      .required()\r\n      .label(\"name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      authService.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = error.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { saveMovie, getMovie } from \"../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .min(5)\r\n      .required()\r\n      .label(\"title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .positive()\r\n      .max(100)\r\n      .required()\r\n      .label(\"numberInStock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .positive()\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      //if add new movie\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      //if edit movie\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel = movie => {\r\n    return {\r\n      _id: this.props.match.params.id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genres\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"NumberInStock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport * as authService from \"../../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    authService.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as authService from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!authService.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navbar\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport MovieForm from \"./components/movieForm\";\nimport NotFound from \"./components/not-found\";\nimport Logout from \"./components/common/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport * as authService from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = authService.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"container\">\n          <ToastContainer />\n          <NavBar user={this.state.user} />\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}